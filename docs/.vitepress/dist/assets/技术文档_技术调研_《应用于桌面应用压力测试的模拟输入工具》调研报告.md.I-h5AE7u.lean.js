import{_ as h,D as p,c as k,I as n,w as t,U as l,m as s,aR as e,aS as d,a as i,o as r}from"./chunks/framework.-9Q_U4ls.js";const E="/docs/assets/速度.PhoopMPM.png",g="/docs/assets/向桌面复制文件.KawAMPZn.png",y="/docs/assets/input.tb6NK-d4.png",o="/docs/assets/xlib窗口说明.cGTrnuNF.png",c="/docs/assets/app-wininfo-m.z05BKuIw.png",F="/docs/assets/可行性运行.13Yq0hyn.gif",_="/docs/assets/newdemo.RuZNlFe1.png",as=JSON.parse('{"title":"应用于桌面应用压力测试的模拟输入工具调研","description":"","frontmatter":{},"headers":[],"relativePath":"技术文档/技术调研/《应用于桌面应用压力测试的模拟输入工具》调研报告.md","filePath":"技术文档/技术调研/《应用于桌面应用压力测试的模拟输入工具》调研报告.md","lastUpdated":1705116614000}'),A={name:"技术文档/技术调研/《应用于桌面应用压力测试的模拟输入工具》调研报告.md"},D=l("",4),u=l("",14),C=s("p",null,"可以很直观的看出，这些测试项的操作都较复杂。",-1),m=s("p",null,"Dogtail 是 Python 的三方库，它使用 Accessbility 技术与桌面应用程序通信。代码通过提前设置好的 Accessbility 标签进行操作，但 Accessbility 标签需要开发人员提前在应用程序中添加，在下图一中看到，1021 的文管中就不存在标签，部分版本基线中该方法并不适用。",-1),b=s("p",null,[s("img",{src:e,alt:"1021-文管"})],-1),B=s("p",null,"通过 Dogtail 和 PyAutogui 来控制键盘、鼠标来进行应用的操作，在 Python 代码遍历寻找应用程序上可用的 Accessbility 节点时候，过程需要 1-2S 左右，之后再执行其他操作，这个过程耗时较长，失去了压力测试本身的意义。",-1),v=s("p",null,"纵观整个方案一，缺点是显而易见的，例如无法测试所有的应用版本、无法满足压力测试暴力操作的要求。",-1),w=s("p",null,[s("strong",null,"方案二：使用 shell 脚本进行场景压测")],-1),f=s("p",null,"这个方案使用 Xdotool 工具模拟键盘、鼠标操作，Xwininfo 工具来获取窗体属性，此方法通过窗体固有属性，找到对应坐标，之后来进行键盘鼠标操作，整个流程如下图所示：",-1),x=s("p",null,[s("img",{src:d,alt:"x操作"})],-1),P=l("",4),T=s("p",null,[i("使用 shell 脚本编写："),s("strong",null,"重复向桌面复制文件，并且每次输出桌面和文管的窗口 ID(寻找窗口 ID 来获取坐标)"),i(" 测试场景，多次运行后，在下图四能看到，同一个场景同一套代码同一个机器，运行结果，极其不稳定，容易报错找不到窗口。")],-1),I=s("p",null,[s("img",{src:g,alt:"向桌面复制文件.png"})],-1),q=l("",3),X=l("",2),S=l("",7),V=s("p",null,"事件处理层为不同类型硬件提供了用户访问及处理接口。在 /dev/input 目录下显示的是已经注册在内核中的设备编程接口，用户通过 open 这些设备文件来打开不同的输入设备进行硬件操作，当打开设备 /dev/input/mice 时，会调用到事件处理层的 Mouse Handler 来处理输入事件，这也使得设备驱动层无需关心设备文件的操作，因为 Mouse Handler 已经有了对应事件处理的方法。",-1),N=s("p",null,[i("对于"),s("strong",null,"容易出错不稳定"),i("的问题，是 Xdotool 这个工具在经过长时间运行后获取窗口 ID 值出错，目前我们能接触到的 UOS 系统图形化界面都是基于 X11 协议，"),s("strong",null,"Xlib"),i(" 是 X11 协议的 API 实现，另外用于代替 Xlib 的新型 API 为 XCB。下图五 Xlib 告诉我们每个窗口和像素图都有自己的坐标系，通过坐标系的位置，可以鼠标定位操作应用。")],-1),R=s("p",null,[s("img",{src:o,alt:"xlib窗口说明"})],-1),W=s("h3",{id:"整体设计",tabindex:"-1"},[i("整体设计 "),s("a",{class:"header-anchor",href:"#整体设计","aria-label":'Permalink to "整体设计"'},"​")],-1),G=s("p",null,[s("strong",null,"app-wininfo-m"),i(" 自上而下的模块结构呈现如下图七：")],-1),U=s("p",null,[s("img",{src:c,alt:"app-wininfo-m.png"})],-1),L=l("",35),Y=l("",10),M=l("",2),H=l("",3),O=l("",6),$=l("",8);function z(K,Q,Z,J,j,ss){const a=p("center");return r(),k("div",null,[D,n(a,{style:{color:"#C0C0C0","text-decoration":"underline"}},{default:t(()=>[i("表一 术语")]),_:1}),u,n(a,{style:{color:"#C0C0C0","text-decoration":"underline"}},{default:t(()=>[i("表二 压力测试场景")]),_:1}),C,m,b,n(a,{style:{color:"#C0C0C0","text-decoration":"underline"}},{default:t(()=>[i("图一 1021文管Accessbility标签")]),_:1}),B,v,w,f,x,n(a,{style:{color:"#C0C0C0","text-decoration":"underline"}},{default:t(()=>[i("图二 Xdotool和Xwininfo流程")]),_:1}),P,n(a,{style:{color:"#C0C0C0","text-decoration":"underline"}},{default:t(()=>[i("图三 Python 脚本与 shell 脚本运行速度对比")]),_:1}),T,I,n(a,{style:{color:"#C0C0C0","text-decoration":"underline"}},{default:t(()=>[i("图四 xdotool 不稳定")]),_:1}),q,n(a,{style:{color:"#C0C0C0","text-decoration":"underline"}},{default:t(()=>[i("表三 二种方案优缺点总结")]),_:1}),X,n(a,{style:{color:"#C0C0C0","text-decoration":"underline"}},{default:t(()=>[i("表四 BUG 列表")]),_:1}),S,n(a,{style:{color:"#C0C0C0","text-decoration":"underline"}},{default:t(()=>[i("图五 输入事件响应流程")]),_:1}),V,N,R,n(a,{style:{color:"#C0C0C0","text-decoration":"underline"}},{default:t(()=>[i("图六 xlib 窗口说明")]),_:1}),W,G,U,n(a,{style:{color:"#C0C0C0","text-decoration":"underline"}},{default:t(()=>[i("图七 app-wininfo-m 模块结构")]),_:1}),L,n(a,{style:{color:"#C0C0C0","text-decoration":"underline"}},{default:t(()=>[i("表五 app-wininfo-m参数文件说明")]),_:1}),Y,n(a,{style:{color:"#C0C0C0","text-decoration":"underline"}},{default:t(()=>[i("图八 demo运行结果")]),_:1}),M,n(a,{style:{color:"#C0C0C0","text-decoration":"underline"}},{default:t(()=>[i("表六 兼容性运行结果")]),_:1}),H,n(a,{style:{color:"#C0C0C0","text-decoration":"underline"}},{default:t(()=>[i("表七 稳定测试项")]),_:1}),O,n(a,{style:{color:"#C0C0C0","text-decoration":"underline"}},{default:t(()=>[i("图九 demo运行速度")]),_:1}),$])}const ns=h(A,[["render",z]]);export{as as __pageData,ns as default};
