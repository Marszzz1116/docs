import{_ as l,c as i,o as s,U as a}from"./chunks/framework.-9Q_U4ls.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"规范文档/流程规范/BUG和用例附加规范.md","filePath":"规范文档/流程规范/BUG和用例附加规范.md","lastUpdated":1705116614000}'),t={name:"规范文档/流程规范/BUG和用例附加规范.md"},e=a(`<h3 id="bug和用例附加规范" tabindex="-1">BUG和用例附加规范 <a class="header-anchor" href="#bug和用例附加规范" aria-label="Permalink to &quot;BUG和用例附加规范&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ==================================</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Author : king</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ==================================</span></span></code></pre></div><p><strong>BUG验证规范</strong></p><ul><li>来源 <ul><li>提单人员为主线集成人员；</li><li>提单人员为开源社区人员；</li><li>提单人员为生态中心人员；</li><li>提单人员为“应用技术测试部”人员，同时属于“五性Bug”；</li><li>提单人员为安全部人员；</li></ul></li><li>处理规范 <ul><li>本地验证通过后不允许关单；</li><li>按要求在Bug中备注验证结论，“集成状态”扭转为“已验证”；</li></ul></li><li>多媒体组件专属约定 <ul><li>无论是否上述Bug来源，本地验证通过后都需要将“集成状态”扭转为“已验证”；</li></ul></li></ul><p><strong>BUG提单规范</strong></p><ul><li>自动化脚本包括调试期间发现的问题都加上【CICD】标签；</li><li>Bug类型要选准确，尤其是四性；</li><li>非转维组件1、2、3级Bug需要关联用例，转维组件1、2级别需要关联用例；</li></ul><p><strong>用例规范</strong></p><ul><li>用例补充 <ul><li>用例均补充到用例库，后面按需导入对应产品库；</li><li>通过Bug补充的用例，在用例库关键词中添加标签“Bugxxxxx转”，关键词中存在多个标签可以“，”隔开；</li><li>通过Bug补充的用例，补充完成后务必将用例和对应Bug建立关联，用例和Bug可以n对n的关系；</li></ul></li><li>自动化转化 <ul><li>1、2级bug关联的用例，转化后“一二级bug自动化”字段标记为“是”；</li><li>需要上线CD的用例，转化后“上线CD”字段标记为“是”（原则上1、2级Bug转化的均要上线）</li><li>涉及外设或多端设备的场景，转化后“设备类型”需要选择对应字段；</li></ul></li></ul>`,8),n=[e];function u(o,p,r,_,c,g){return s(),i("div",null,n)}const B=l(t,[["render",u]]);export{d as __pageData,B as default};
